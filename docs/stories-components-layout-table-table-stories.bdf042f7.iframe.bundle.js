"use strict";(globalThis.webpackChunk_hiroyoshi_mori_react_components_bulma=globalThis.webpackChunk_hiroyoshi_mori_react_components_bulma||[]).push([[147],{"./src/stories/components/layout/table/table.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,HasCaption:()=>HasCaption,HasColGroupWithCols:()=>HasColGroupWithCols,HasColGroupWithNoCols:()=>HasColGroupWithNoCols,HasFooter:()=>HasFooter,HasHeader:()=>HasHeader,InTableContainer:()=>InTableContainer,IsBordered:()=>IsBordered,IsFullWidth:()=>IsFullWidth,IsHovarable:()=>IsHovarable,IsNarrow:()=>IsNarrow,IsStriped:()=>IsStriped,WithAttributes:()=>WithAttributes,WithClasses:()=>WithClasses,WithDatasets:()=>WithDatasets,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__}),__webpack_require__("./node_modules/react/index.js");var _components__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/index.ts"),_utils__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/utils/index.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");let __WEBPACK_DEFAULT_EXPORT__={title:"React Component/Layout/Table",component:_components__WEBPACK_IMPORTED_MODULE_1__.iA,tags:["autodocs"],parameters:{componentSubtitle:"Table set",docs:{description:{component:"This component renders tables.<br />In Bulma doc: https://bulma.io/documentation/elements/table/"}}},argTypes:{body:{control:"object",description:"Data of table which is shown in body",table:{type:{summary:"TableBodyProps",detail:(0,_utils__WEBPACK_IMPORTED_MODULE_2__.e6)(`
                            {
                                values: {
                                    values: {
                                        value: ReactNode;
                                        colSpan?: number;
                                        rowSpan?: number;
                                        isHeaderCell?: boolean;
                                        attributes?: HTMLAttributes<HTMLTableCellElement>;
                                        datasets?: Map<string, string>;
                                    } as TableCellProps[];
                                    attributes?: HTMLAttributes<HTMLTableRowElement>;
                                    datasets?: Map<string, string>;
                                } as TableRowProps[],
                                classes?: {
                                    wrap?: string[];
                                    row?: string[];
                                },
                                attributes?: HTMLAttributes<HTMLTableSectionElement>,
                                datasets?: Map<string, string>,
                            }
                        `)}}},headers:{control:"object",description:"Items of table header",table:{type:{summary:"TableHeaderProps",detail:(0,_utils__WEBPACK_IMPORTED_MODULE_2__.e6)(`
                            {
                                values: TableRowProps[];
                                classes?: {
                                    wrap?: string[],
                                    row?: string[],
                                };
                                attributes?: HTMLAttributes<HTMLTableSectionElement>;
                                datasets?: Map<string, string>;
                            }
                        `)},defaultValue:{summary:"undefined"}}},footers:{control:"object",description:"Items of table footer",table:{type:{summary:"TableFooterProps",detail:(0,_utils__WEBPACK_IMPORTED_MODULE_2__.e6)(`
                            {
                                values: TableRowProps[];
                                classes?: {
                                    wrap?: string[],
                                    row?: string[],
                                };
                                attributes?: HTMLAttributes<HTMLTableSectionElement>;
                                datasets?: Map<string, string>;
                            }
                        `)},defaultValue:{summary:"undefined"}}},caption:{control:"object",description:"Caption data",table:{type:{summary:"CaptionProps",detail:(0,_utils__WEBPACK_IMPORTED_MODULE_2__.e6)(`
                            {
                                children?: ReactNode,
                                classes?: string[],
                                attributes?: HTMLAttributes<HTMLTableCaptionElement>,
                                datasets?: Map<string, string>,
                            }
                        `)},defaultValue:{summary:"undefined"}}},colgroup:{control:"object",description:"Column group data",table:{type:{summary:"ColGroupProps",detail:(0,_utils__WEBPACK_IMPORTED_MODULE_2__.e6)(`
                            {
                                {
                                    cols: ({
                                        span?: number,
                                        classes?: string[],
                                        attributes?: ColHTMLAttributes<HTMLTableColElement>,
                                        datasets?: new Map<string, string>,
                                    } as ColProps)[],
                                    span: undefined,
                                } | {cols: [], span: number},
                                classes?: {
                                    group?: string[],
                                    col?: string[],
                                };
                                attributes?: ColgroupHTMLAttributes<HTMLTableColElement>;
                                datasets?: Map<string, string>;
                            }
                        `)},defaultValue:{summary:"undefined"}}},isBordered:{control:"boolean",description:"Bordered table",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},isStriped:{control:"boolean",description:"Has striped rows",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},isNarrow:{control:"boolean",description:"Narrower table",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},isHoverable:{control:"boolean",description:"Has striped rows when hovered",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},isFullWidth:{control:"boolean",description:"Full width table",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},inTableContainer:{control:"boolean",description:"Table will be in container <div>",table:{type:{summary:"boolean"},defaultValue:{summary:"false"}}},classes:{control:"object",description:"Style classes for table",table:{type:{summary:"TableClasses",detail:(0,_utils__WEBPACK_IMPORTED_MODULE_2__.e6)(`
                            {
                                wrap?: string[],
                                container?: string[],
                                headers?: string[],
                                footers?: string[],
                            }
                        `)},defaultValue:{summary:"{}"}}},attributes:{control:"object",description:"Additional attributes for table",table:{type:{summary:"TableAttributes",detail:(0,_utils__WEBPACK_IMPORTED_MODULE_2__.e6)(`
                            {
                                wrap?: TableHTMLAttributes<HTMLTableElement>,
                                container?: HTMLAttributes<HTMLDivElement>,
                            }
                        `)},defaultValue:{summary:"{}"}}},datasets:{control:"object",description:'Datasets for table. "data-" will be added at the beginning of attributes.',table:{type:{summary:"TableDatasets",detail:(0,_utils__WEBPACK_IMPORTED_MODULE_2__.e6)(`
                            {
                                wrap?: Map<string, string>,
                                container?: Map<string, string>,
                            }
                        `)},defaultValue:{summary:"{}"}}}}},Default={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_components__WEBPACK_IMPORTED_MODULE_1__.iA,{body:{values:[{values:[{value:"TEST 1"},{value:"TEST 2"},{value:"TEST 3"},{value:"TEST 4"},{value:"TEST 5"}]},{values:[{value:"TEST 1"},{value:"TEST 2"},{value:"TEST 3"},{value:"TEST 4"},{value:"TEST 5"}]},{values:[{value:"TEST 1"},{value:"TEST 2"},{value:"TEST 3"},{value:"TEST 4"},{value:"TEST 5"}]}]},...args})},IsBordered={...Default,args:{isBordered:!0}},IsStriped={...Default,args:{isStriped:!0}},IsNarrow={...Default,args:{isNarrow:!0}},IsHovarable={...Default,args:{isHoverable:!0}},IsFullWidth={...Default,args:{isFullWidth:!0}},InTableContainer={...Default,args:{inTableContainer:!0}},HasHeader={...Default,args:{headers:{values:[{values:[{value:"Header 1",classes:["thead","has-background-warning-light"],attributes:{"aria-label":"thead"},datasets:new Map([["id","thead"],["name","Table header"]])},{value:"Header 2"},{value:"Header 3"},{value:"Header 4"},{value:"Header 5"}]}]}}},HasFooter={...Default,args:{footers:{values:[{values:[{value:"Footer 1",classes:["tfoot","has-background-info-light"],attributes:{"aria-label":"tfoot"},datasets:new Map([["id","tfoot"],["name","Table footer"]])},{value:"Footer 2"},{value:"Footer 3"},{value:"Footer 4"},{value:"Footer 5"}]}]}}},HasCaption={...Default,args:{caption:{classes:["caption","has-background-success-light"],attributes:{"aria-label":"Table Caption"},datasets:new Map([["id","caption"],["name","Table Caption"]]),children:"Test Caption"}}},HasColGroupWithNoCols={...Default,args:{colgroup:{span:5,classes:{group:["colgroup","has-background-primary-light"],col:[]},attributes:{"aria-label":"Col Group"},datasets:new Map([["id","colgroup"],["name","Table Col Group"]])}}},HasColGroupWithCols={...Default,args:{colgroup:{cols:[{span:1,classes:["col","has-background-link-light"],attributes:{"aria-label":"col 1"},datasets:new Map([["id","col1"],["name","Col 1"]])},{span:2,classes:["col","has-background-primary"],attributes:{"aria-label":"col 2"},datasets:new Map([["id","col2"],["name","Col 2"]])},{span:1,classes:["col"],attributes:{"aria-label":"col 3"},datasets:new Map([["id","col3"],["name","Col 3"]])},{span:1,classes:["col"],attributes:{"aria-label":"col 4"},datasets:new Map([["id","col4"],["name","Col 4"]])}]}}},WithClasses={...Default,args:{inTableContainer:!0,body:{values:[{values:[{value:"TEST 1",classes:["test-value-1"]},{value:"TEST 2",classes:["test-value-2"]},{value:"TEST 3",classes:["test-value-3"]},{value:"TEST 4",classes:["test-value-4"]},{value:"TEST 5",classes:["test-value-5"]}],classes:["test-body-row-1"]},{values:[{value:"TEST 1"},{value:"TEST 2"},{value:"TEST 3"},{value:"TEST 4"},{value:"TEST 5"}],classes:["test-body-row-2"]},{values:[{value:"TEST 1"},{value:"TEST 2"},{value:"TEST 3"},{value:"TEST 4"},{value:"TEST 5"}],classes:["test-body-row-3"]}],classes:{wrap:["test-body-wrap"],row:["test-body-row"]}},headers:{values:[{values:[{value:"Header 1",classes:["test-header-1"]},{value:"Header 2",classes:["test-header-2"]},{value:"Header 3",classes:["test-header-3"]},{value:"Header 4",classes:["test-header-4"]},{value:"Header 5",classes:["test-header-5"]}],classes:["test-header-row"]}],classes:{wrap:["test-header-wrap"],row:["test-header-row"]}},footers:{values:[{values:[{value:"Footer 1",classes:["test-footer-1"]},{value:"Footer 2",classes:["test-footer-2"]},{value:"Footer 3",classes:["test-footer-3"]},{value:"Footer 4",classes:["test-footer-4"]},{value:"Footer 5",classes:["test-footer-5"]}],classes:["test-footer-row"]}],classes:{wrap:["test-footer-wrap"],row:["test-footer-row"]}},classes:{wrap:["test-wrap"],container:["test-container"],headers:["test-headers"],footers:["test-footers"]}}},WithAttributes={...Default,args:{inTableContainer:!0,body:{values:[{values:[{value:"TEST 1",attributes:{"aria-label":"Table Value 1"}},{value:"TEST 2",attributes:{"aria-label":"Table Value 2"}},{value:"TEST 3",attributes:{"aria-label":"Table Value 3"}},{value:"TEST 4",attributes:{"aria-label":"Table Value 4"}},{value:"TEST 5",attributes:{"aria-label":"Table Value 5"}}],attributes:{"aria-label":"Table Body Row 1"}},{values:[{value:"TEST 1"},{value:"TEST 2"},{value:"TEST 3"},{value:"TEST 4"},{value:"TEST 5"}],attributes:{"aria-label":"Table Body Row 2"}},{values:[{value:"TEST 1"},{value:"TEST 2"},{value:"TEST 3"},{value:"TEST 4"},{value:"TEST 5"}],attributes:{"aria-label":"Table Body Row 3"}}],attributes:{"aria-label":"Table Body"}},headers:{values:[{values:[{value:"Header 1",attributes:{"aria-label":"Table Header 1"}},{value:"Header 2",attributes:{"aria-label":"Table Header 2"}},{value:"Header 3",attributes:{"aria-label":"Table Header 3"}},{value:"Header 4",attributes:{"aria-label":"Table Header 4"}},{value:"Header 5",attributes:{"aria-label":"Table Header 5"}}],attributes:{"aria-label":"Table Header Row"}}],attributes:{"aria-label":"Table Header"}},footers:{values:[{values:[{value:"Footer 1",attributes:{"aria-label":"Table Footer 1"}},{value:"Footer 2",attributes:{"aria-label":"Table Footer 2"}},{value:"Footer 3",attributes:{"aria-label":"Table Footer 3"}},{value:"Footer 4",attributes:{"aria-label":"Table Footer 4"}},{value:"Footer 5",attributes:{"aria-label":"Table Footer 5"}}],attributes:{"aria-label":"Table Footer Row"}}],attributes:{"aria-label":"Table Footer"}},attributes:{wrap:{"aria-label":"Table Wrap"},container:{"aria-label":"Table Container"}}}},WithDatasets={...Default,args:{inTableContainer:!0,body:{values:[{values:[{value:"TEST 1",datasets:new Map([["id","table-body-value-1"]])},{value:"TEST 2",datasets:new Map([["id","table-body-value-2"]])},{value:"TEST 3",datasets:new Map([["id","table-body-value-3"]])},{value:"TEST 4",datasets:new Map([["id","table-body-value-4"]])},{value:"TEST 5",datasets:new Map([["id","table-body-value-5"]])}],datasets:new Map([["id","table-body-row-1"]])},{values:[{value:"TEST 1"},{value:"TEST 2"},{value:"TEST 3"},{value:"TEST 4"},{value:"TEST 5"}],datasets:new Map([["id","table-body-row-2"]])},{values:[{value:"TEST 1"},{value:"TEST 2"},{value:"TEST 3"},{value:"TEST 4"},{value:"TEST 5"}],datasets:new Map([["id","table-body-row-3"]])}],datasets:new Map([["id","table-body"]])},headers:{values:[{values:[{value:"Header 1",datasets:new Map([["id","table-header-1"]])},{value:"Header 2",datasets:new Map([["id","table-header-2"]])},{value:"Header 3",datasets:new Map([["id","table-header-3"]])},{value:"Header 4",datasets:new Map([["id","table-header-4"]])},{value:"Header 5",datasets:new Map([["id","table-header-5"]])}],datasets:new Map([["id","table-header-row"]])}],datasets:new Map([["id","table-header"]])},footers:{values:[{values:[{value:"Footer 1",datasets:new Map([["id","table-footer-1"]])},{value:"Footer 2",datasets:new Map([["id","table-footer-2"]])},{value:"Footer 3",datasets:new Map([["id","table-footer-3"]])},{value:"Footer 4",datasets:new Map([["id","table-footer-4"]])},{value:"Footer 5",datasets:new Map([["id","table-footer-5"]])}],datasets:new Map([["id","table-footer-row"]])}],datasets:new Map([["id","table-footer"]])},datasets:{wrap:new Map([["id","table-wrap"]]),container:new Map([["id","table-container"]])}}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: (args: any) => <Table body={{\n    values: [{\n      values: [{\n        value: "TEST 1"\n      },\n      // Do NOT use HTML tags in ReactNode in storybook, otherwise autodocs will be out of memory.\n      {\n        value: "TEST 2"\n      }, {\n        value: "TEST 3"\n      }, {\n        value: "TEST 4"\n      }, {\n        value: "TEST 5"\n      }]\n    }, {\n      values: [{\n        value: "TEST 1"\n      }, {\n        value: "TEST 2"\n      }, {\n        value: "TEST 3"\n      }, {\n        value: "TEST 4"\n      }, {\n        value: "TEST 5"\n      }]\n    }, {\n      values: [{\n        value: "TEST 1"\n      }, {\n        value: "TEST 2"\n      }, {\n        value: "TEST 3"\n      }, {\n        value: "TEST 4"\n      }, {\n        value: "TEST 5"\n      }]\n    }]\n  }} {...args} />\n}',...Default.parameters?.docs?.source},description:{story:"Default table",...Default.parameters?.docs?.description}}},IsBordered.parameters={...IsBordered.parameters,docs:{...IsBordered.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    isBordered: true\n  }\n}",...IsBordered.parameters?.docs?.source},description:{story:"Bordered table",...IsBordered.parameters?.docs?.description}}},IsStriped.parameters={...IsStriped.parameters,docs:{...IsStriped.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    isStriped: true\n  }\n}",...IsStriped.parameters?.docs?.source},description:{story:"Striped table",...IsStriped.parameters?.docs?.description}}},IsNarrow.parameters={...IsNarrow.parameters,docs:{...IsNarrow.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    isNarrow: true\n  }\n}",...IsNarrow.parameters?.docs?.source},description:{story:"Narrow table",...IsNarrow.parameters?.docs?.description}}},IsHovarable.parameters={...IsHovarable.parameters,docs:{...IsHovarable.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    isHoverable: true\n  }\n}",...IsHovarable.parameters?.docs?.source},description:{story:"Table striped when hovered",...IsHovarable.parameters?.docs?.description}}},IsFullWidth.parameters={...IsFullWidth.parameters,docs:{...IsFullWidth.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    isFullWidth: true\n  }\n}",...IsFullWidth.parameters?.docs?.source},description:{story:"Table with full width",...IsFullWidth.parameters?.docs?.description}}},InTableContainer.parameters={...InTableContainer.parameters,docs:{...InTableContainer.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    inTableContainer: true\n  }\n}",...InTableContainer.parameters?.docs?.source},description:{story:"Table rendered in container",...InTableContainer.parameters?.docs?.description}}},HasHeader.parameters={...HasHeader.parameters,docs:{...HasHeader.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    headers: {\n      values: [{\n        values: [{\n          value: \"Header 1\",\n          classes: ['thead', 'has-background-warning-light'],\n          attributes: {\n            'aria-label': 'thead'\n          },\n          datasets: new Map([['id', 'thead'], ['name', 'Table header']])\n        }, {\n          value: \"Header 2\"\n        }, {\n          value: \"Header 3\"\n        }, {\n          value: \"Header 4\"\n        }, {\n          value: \"Header 5\"\n        }]\n      }]\n    }\n  }\n}",...HasHeader.parameters?.docs?.source},description:{story:"Table with header",...HasHeader.parameters?.docs?.description}}},HasFooter.parameters={...HasFooter.parameters,docs:{...HasFooter.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    footers: {\n      values: [{\n        values: [{\n          value: \"Footer 1\",\n          classes: ['tfoot', 'has-background-info-light'],\n          attributes: {\n            'aria-label': 'tfoot'\n          },\n          datasets: new Map([['id', 'tfoot'], ['name', 'Table footer']])\n        }, {\n          value: \"Footer 2\"\n        }, {\n          value: \"Footer 3\"\n        }, {\n          value: \"Footer 4\"\n        }, {\n          value: \"Footer 5\"\n        }]\n      }]\n    }\n  }\n}",...HasFooter.parameters?.docs?.source},description:{story:"Table with footer",...HasFooter.parameters?.docs?.description}}},HasCaption.parameters={...HasCaption.parameters,docs:{...HasCaption.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    caption: {\n      classes: ['caption', 'has-background-success-light'],\n      attributes: {\n        'aria-label': 'Table Caption'\n      },\n      datasets: new Map([['id', 'caption'], ['name', 'Table Caption']]),\n      children: \"Test Caption\"\n    }\n  }\n}",...HasCaption.parameters?.docs?.source},description:{story:"Table with caption",...HasCaption.parameters?.docs?.description}}},HasColGroupWithNoCols.parameters={...HasColGroupWithNoCols.parameters,docs:{...HasColGroupWithNoCols.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    colgroup: {\n      span: 5,\n      classes: {\n        group: ['colgroup', 'has-background-primary-light'],\n        col: []\n      },\n      attributes: {\n        'aria-label': 'Col Group'\n      },\n      datasets: new Map([['id', 'colgroup'], ['name', 'Table Col Group']])\n    }\n  }\n}",...HasColGroupWithNoCols.parameters?.docs?.source},description:{story:"Table with colgroup with no cols",...HasColGroupWithNoCols.parameters?.docs?.description}}},HasColGroupWithCols.parameters={...HasColGroupWithCols.parameters,docs:{...HasColGroupWithCols.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    colgroup: {\n      cols: [{\n        span: 1,\n        classes: ['col', 'has-background-link-light'],\n        attributes: {\n          'aria-label': 'col 1'\n        },\n        datasets: new Map([['id', 'col1'], ['name', 'Col 1']])\n      }, {\n        span: 2,\n        classes: ['col', 'has-background-primary'],\n        attributes: {\n          'aria-label': 'col 2'\n        },\n        datasets: new Map([['id', 'col2'], ['name', 'Col 2']])\n      }, {\n        span: 1,\n        classes: ['col'],\n        attributes: {\n          'aria-label': 'col 3'\n        },\n        datasets: new Map([['id', 'col3'], ['name', 'Col 3']])\n      }, {\n        span: 1,\n        classes: ['col'],\n        attributes: {\n          'aria-label': 'col 4'\n        },\n        datasets: new Map([['id', 'col4'], ['name', 'Col 4']])\n      }]\n    }\n  }\n}",...HasColGroupWithCols.parameters?.docs?.source},description:{story:"Table with colgroup with cols",...HasColGroupWithCols.parameters?.docs?.description}}},WithClasses.parameters={...WithClasses.parameters,docs:{...WithClasses.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    inTableContainer: true,\n    body: {\n      values: [{\n        values: [{\n          value: \"TEST 1\",\n          classes: ['test-value-1']\n        },\n        // Do NOT use HTML tags in ReactNode in storybook, otherwise autodocs will be out of memory.\n        {\n          value: \"TEST 2\",\n          classes: ['test-value-2']\n        }, {\n          value: \"TEST 3\",\n          classes: ['test-value-3']\n        }, {\n          value: \"TEST 4\",\n          classes: ['test-value-4']\n        }, {\n          value: \"TEST 5\",\n          classes: ['test-value-5']\n        }],\n        classes: ['test-body-row-1']\n      }, {\n        values: [{\n          value: \"TEST 1\"\n        }, {\n          value: \"TEST 2\"\n        }, {\n          value: \"TEST 3\"\n        }, {\n          value: \"TEST 4\"\n        }, {\n          value: \"TEST 5\"\n        }],\n        classes: ['test-body-row-2']\n      }, {\n        values: [{\n          value: \"TEST 1\"\n        }, {\n          value: \"TEST 2\"\n        }, {\n          value: \"TEST 3\"\n        }, {\n          value: \"TEST 4\"\n        }, {\n          value: \"TEST 5\"\n        }],\n        classes: ['test-body-row-3']\n      }],\n      classes: {\n        wrap: ['test-body-wrap'],\n        row: ['test-body-row']\n      }\n    },\n    headers: {\n      values: [{\n        values: [{\n          value: \"Header 1\",\n          classes: ['test-header-1']\n        }, {\n          value: \"Header 2\",\n          classes: ['test-header-2']\n        }, {\n          value: \"Header 3\",\n          classes: ['test-header-3']\n        }, {\n          value: \"Header 4\",\n          classes: ['test-header-4']\n        }, {\n          value: \"Header 5\",\n          classes: ['test-header-5']\n        }],\n        classes: ['test-header-row']\n      }],\n      classes: {\n        wrap: ['test-header-wrap'],\n        row: ['test-header-row']\n      }\n    },\n    footers: {\n      values: [{\n        values: [{\n          value: \"Footer 1\",\n          classes: ['test-footer-1']\n        }, {\n          value: \"Footer 2\",\n          classes: ['test-footer-2']\n        }, {\n          value: \"Footer 3\",\n          classes: ['test-footer-3']\n        }, {\n          value: \"Footer 4\",\n          classes: ['test-footer-4']\n        }, {\n          value: \"Footer 5\",\n          classes: ['test-footer-5']\n        }],\n        classes: ['test-footer-row']\n      }],\n      classes: {\n        wrap: ['test-footer-wrap'],\n        row: ['test-footer-row']\n      }\n    },\n    classes: {\n      wrap: ['test-wrap'],\n      container: ['test-container'],\n      headers: ['test-headers'],\n      footers: ['test-footers']\n    }\n  }\n}",...WithClasses.parameters?.docs?.source},description:{story:"Table with style classes",...WithClasses.parameters?.docs?.description}}},WithAttributes.parameters={...WithAttributes.parameters,docs:{...WithAttributes.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    inTableContainer: true,\n    body: {\n      values: [{\n        values: [{\n          value: \"TEST 1\",\n          attributes: {\n            'aria-label': 'Table Value 1'\n          }\n        },\n        // Do NOT use HTML tags in ReactNode in storybook, otherwise autodocs will be out of memory.\n        {\n          value: \"TEST 2\",\n          attributes: {\n            'aria-label': 'Table Value 2'\n          }\n        }, {\n          value: \"TEST 3\",\n          attributes: {\n            'aria-label': 'Table Value 3'\n          }\n        }, {\n          value: \"TEST 4\",\n          attributes: {\n            'aria-label': 'Table Value 4'\n          }\n        }, {\n          value: \"TEST 5\",\n          attributes: {\n            'aria-label': 'Table Value 5'\n          }\n        }],\n        attributes: {\n          'aria-label': 'Table Body Row 1'\n        }\n      }, {\n        values: [{\n          value: \"TEST 1\"\n        }, {\n          value: \"TEST 2\"\n        }, {\n          value: \"TEST 3\"\n        }, {\n          value: \"TEST 4\"\n        }, {\n          value: \"TEST 5\"\n        }],\n        attributes: {\n          'aria-label': 'Table Body Row 2'\n        }\n      }, {\n        values: [{\n          value: \"TEST 1\"\n        }, {\n          value: \"TEST 2\"\n        }, {\n          value: \"TEST 3\"\n        }, {\n          value: \"TEST 4\"\n        }, {\n          value: \"TEST 5\"\n        }],\n        attributes: {\n          'aria-label': 'Table Body Row 3'\n        }\n      }],\n      attributes: {\n        'aria-label': 'Table Body'\n      }\n    },\n    headers: {\n      values: [{\n        values: [{\n          value: \"Header 1\",\n          attributes: {\n            'aria-label': 'Table Header 1'\n          }\n        }, {\n          value: \"Header 2\",\n          attributes: {\n            'aria-label': 'Table Header 2'\n          }\n        }, {\n          value: \"Header 3\",\n          attributes: {\n            'aria-label': 'Table Header 3'\n          }\n        }, {\n          value: \"Header 4\",\n          attributes: {\n            'aria-label': 'Table Header 4'\n          }\n        }, {\n          value: \"Header 5\",\n          attributes: {\n            'aria-label': 'Table Header 5'\n          }\n        }],\n        attributes: {\n          'aria-label': 'Table Header Row'\n        }\n      }],\n      attributes: {\n        'aria-label': 'Table Header'\n      }\n    },\n    footers: {\n      values: [{\n        values: [{\n          value: \"Footer 1\",\n          attributes: {\n            'aria-label': 'Table Footer 1'\n          }\n        }, {\n          value: \"Footer 2\",\n          attributes: {\n            'aria-label': 'Table Footer 2'\n          }\n        }, {\n          value: \"Footer 3\",\n          attributes: {\n            'aria-label': 'Table Footer 3'\n          }\n        }, {\n          value: \"Footer 4\",\n          attributes: {\n            'aria-label': 'Table Footer 4'\n          }\n        }, {\n          value: \"Footer 5\",\n          attributes: {\n            'aria-label': 'Table Footer 5'\n          }\n        }],\n        attributes: {\n          'aria-label': 'Table Footer Row'\n        }\n      }],\n      attributes: {\n        'aria-label': 'Table Footer'\n      }\n    },\n    attributes: {\n      wrap: {\n        'aria-label': 'Table Wrap'\n      },\n      container: {\n        'aria-label': 'Table Container'\n      }\n    }\n  }\n}",...WithAttributes.parameters?.docs?.source},description:{story:"Table with additional attributes",...WithAttributes.parameters?.docs?.description}}},WithDatasets.parameters={...WithDatasets.parameters,docs:{...WithDatasets.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    inTableContainer: true,\n    body: {\n      values: [{\n        values: [{\n          value: \"TEST 1\",\n          datasets: new Map([['id', 'table-body-value-1']])\n        },\n        // Do NOT use HTML tags in ReactNode in storybook, otherwise autodocs will be out of memory.\n        {\n          value: \"TEST 2\",\n          datasets: new Map([['id', 'table-body-value-2']])\n        }, {\n          value: \"TEST 3\",\n          datasets: new Map([['id', 'table-body-value-3']])\n        }, {\n          value: \"TEST 4\",\n          datasets: new Map([['id', 'table-body-value-4']])\n        }, {\n          value: \"TEST 5\",\n          datasets: new Map([['id', 'table-body-value-5']])\n        }],\n        datasets: new Map([['id', 'table-body-row-1']])\n      }, {\n        values: [{\n          value: \"TEST 1\"\n        }, {\n          value: \"TEST 2\"\n        }, {\n          value: \"TEST 3\"\n        }, {\n          value: \"TEST 4\"\n        }, {\n          value: \"TEST 5\"\n        }],\n        datasets: new Map([['id', 'table-body-row-2']])\n      }, {\n        values: [{\n          value: \"TEST 1\"\n        }, {\n          value: \"TEST 2\"\n        }, {\n          value: \"TEST 3\"\n        }, {\n          value: \"TEST 4\"\n        }, {\n          value: \"TEST 5\"\n        }],\n        datasets: new Map([['id', 'table-body-row-3']])\n      }],\n      datasets: new Map([['id', 'table-body']])\n    },\n    headers: {\n      values: [{\n        values: [{\n          value: \"Header 1\",\n          datasets: new Map([['id', 'table-header-1']])\n        }, {\n          value: \"Header 2\",\n          datasets: new Map([['id', 'table-header-2']])\n        }, {\n          value: \"Header 3\",\n          datasets: new Map([['id', 'table-header-3']])\n        }, {\n          value: \"Header 4\",\n          datasets: new Map([['id', 'table-header-4']])\n        }, {\n          value: \"Header 5\",\n          datasets: new Map([['id', 'table-header-5']])\n        }],\n        datasets: new Map([['id', 'table-header-row']])\n      }],\n      datasets: new Map([['id', 'table-header']])\n    },\n    footers: {\n      values: [{\n        values: [{\n          value: \"Footer 1\",\n          datasets: new Map([['id', 'table-footer-1']])\n        }, {\n          value: \"Footer 2\",\n          datasets: new Map([['id', 'table-footer-2']])\n        }, {\n          value: \"Footer 3\",\n          datasets: new Map([['id', 'table-footer-3']])\n        }, {\n          value: \"Footer 4\",\n          datasets: new Map([['id', 'table-footer-4']])\n        }, {\n          value: \"Footer 5\",\n          datasets: new Map([['id', 'table-footer-5']])\n        }],\n        datasets: new Map([['id', 'table-footer-row']])\n      }],\n      datasets: new Map([['id', 'table-footer']])\n    },\n    datasets: {\n      wrap: new Map([['id', 'table-wrap']]),\n      container: new Map([['id', 'table-container']])\n    }\n  }\n}",...WithDatasets.parameters?.docs?.source},description:{story:"Table with datasets",...WithDatasets.parameters?.docs?.description}}};let __namedExportsOrder=["Default","IsBordered","IsStriped","IsNarrow","IsHovarable","IsFullWidth","InTableContainer","HasHeader","HasFooter","HasCaption","HasColGroupWithNoCols","HasColGroupWithCols","WithClasses","WithAttributes","WithDatasets"]}}]);
//# sourceMappingURL=stories-components-layout-table-table-stories.bdf042f7.iframe.bundle.js.map