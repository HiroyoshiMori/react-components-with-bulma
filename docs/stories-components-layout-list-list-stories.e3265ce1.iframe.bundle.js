"use strict";(globalThis.webpackChunk_hiroyoshi_mori_react_components_bulma=globalThis.webpackChunk_hiroyoshi_mori_react_components_bulma||[]).push([[258],{"./src/stories/components/layout/list/list.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,InConsistent:()=>InConsistent,UsingCustom:()=>UsingCustom,WithAttributes:()=>WithAttributes,WithClasses:()=>WithClasses,WithDatasets:()=>WithDatasets,__namedExportsOrder:()=>__namedExportsOrder,default:()=>list_stories});var react=__webpack_require__("./node_modules/react/index.js"),components=__webpack_require__("./src/components/index.ts"),utils=__webpack_require__("./src/utils/index.ts"),common=__webpack_require__("./src/components/common.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");let ListDetailCustom=props=>{var _classes$wrap;let{item,attributes={},datasets=new Map}=props,classes=(0,common.j)(props.classes,["wrap","column"],[],k=>{let defaultValue;switch(k){case"wrap":defaultValue="columns";break;case"column":defaultValue="column"}return defaultValue}),datasetShown=(0,utils.vM)(datasets),customItems=[];return item&&item.map(v=>{var _v$datasets,_v$classes,_v$classes2,_v$attributes;v.datasets=(_v$datasets=v.datasets)!==null&&void 0!==_v$datasets?_v$datasets:new Map;let columnClasses=classes.column?classes.column.concat((_v$classes=v.classes)!==null&&void 0!==_v$classes?_v$classes:[]):(_v$classes2=v.classes)!==null&&void 0!==_v$classes2?_v$classes2:[],datasetShown=(0,utils.vM)(v.datasets),column={value:v.value,classes:columnClasses,attributes:(_v$attributes=v.attributes)!==null&&void 0!==_v$attributes?_v$attributes:{},datasets:datasetShown};customItems.push(column)}),(0,jsx_runtime.jsx)(react.Fragment,{children:(0,jsx_runtime.jsxs)("div",{className:(_classes$wrap=classes.wrap)===null||void 0===_classes$wrap?void 0:_classes$wrap.join(" "),...attributes,...datasetShown,children:[(0,jsx_runtime.jsx)("div",{className:customItems[0].classes.join(" "),...customItems[0].attributes,...customItems[0].datasets,children:customItems[0].value}),(0,jsx_runtime.jsxs)("div",{className:"column",children:[(0,jsx_runtime.jsxs)("div",{className:"columns",children:[(0,jsx_runtime.jsx)("div",{className:customItems[1].classes.join(" "),...customItems[1].attributes,...customItems[1].datasets,children:customItems[1].value}),(0,jsx_runtime.jsx)("div",{className:customItems[2].classes.join(" "),...customItems[2].attributes,...customItems[2].datasets,children:customItems[2].value})]}),(0,jsx_runtime.jsxs)("div",{className:"columns",children:[(0,jsx_runtime.jsx)("div",{className:customItems[3].classes.join(" "),...customItems[3].attributes,...customItems[3].datasets,children:customItems[3].value}),(0,jsx_runtime.jsx)("div",{className:customItems[4].classes.join(" "),...customItems[4].attributes,...customItems[4].datasets,children:customItems[4].value})]})]})]})})};ListDetailCustom.__docgenInfo={description:"",methods:[],displayName:"ListDetailCustom",props:{item:{required:!0,tsType:{name:"Array",elements:[{name:"intersection",raw:"{\n    value: any;\n    attributes?: HTMLAttributes<HTMLDivElement>;\n    datasets?: CommonDataSet;\n} & CommonStyleClasses",elements:[{name:"signature",type:"object",raw:"{\n    value: any;\n    attributes?: HTMLAttributes<HTMLDivElement>;\n    datasets?: CommonDataSet;\n}",signature:{properties:[{key:"value",value:{name:"any",required:!0}},{key:"attributes",value:{name:"HTMLAttributes",elements:[{name:"HTMLDivElement"}],raw:"HTMLAttributes<HTMLDivElement>",required:!1}},{key:"datasets",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!1}}]}},{name:"signature",type:"object",raw:"{\n    classes?: string[];\n}",signature:{properties:[{key:"classes",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!1}}]}}]}],raw:"ListColumnFields[]"},description:""},classes:{required:!1,tsType:{name:"signature",type:"object",raw:"{\n    wrap?: string[];\n    column?: string[];\n}",signature:{properties:[{key:"wrap",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!1}},{key:"column",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!1}}]}},description:""},attributes:{required:!1,tsType:{name:"HTMLAttributes",elements:[{name:"HTMLDivElement"}],raw:"HTMLAttributes<HTMLDivElement>"},description:""},datasets:{required:!1,tsType:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>"},description:""}}};let ListHeaderCustomWith5Items=props=>{let{items,attributes={},datasets=new Map}=props,classes=(0,common.j)(props.classes,["wrap","column"],[],k=>{let defaultValue;switch(k){case"wrap":defaultValue="columns";break;case"column":defaultValue="column"}return defaultValue}),datasetShown=(0,utils.vM)(datasets),customItems=[];return items&&items.map(header=>{var _header$datasets,_header$classes,_header$classes2,_header$attributes;header.datasets=(_header$datasets=header.datasets)!==null&&void 0!==_header$datasets?_header$datasets:new Map;let columnClasses=classes.column?classes.column.concat((_header$classes=header.classes)!==null&&void 0!==_header$classes?_header$classes:[]):(_header$classes2=header.classes)!==null&&void 0!==_header$classes2?_header$classes2:[],itemDatasetShown=(0,utils.vM)(header.datasets),column={value:header.value,classes:columnClasses,attributes:(_header$attributes=header.attributes)!==null&&void 0!==_header$attributes?_header$attributes:{},datasets:itemDatasetShown};customItems.push(column)}),(0,jsx_runtime.jsx)(react.Fragment,{children:(0,jsx_runtime.jsxs)("div",{className:classes.wrap?classes.wrap.join(" "):"",...attributes,...datasetShown,children:[(0,jsx_runtime.jsx)("div",{className:customItems[0].classes.join(" "),...customItems[0].attributes,...customItems[0].datasets,children:customItems[0].value}),(0,jsx_runtime.jsxs)("div",{className:"column",children:[(0,jsx_runtime.jsxs)("div",{className:"columns",children:[(0,jsx_runtime.jsx)("div",{className:customItems[1].classes.join(" "),...customItems[1].attributes,...customItems[1].datasets,children:customItems[1].value}),(0,jsx_runtime.jsx)("div",{className:customItems[2].classes.join(" "),...customItems[2].attributes,...customItems[2].datasets,children:customItems[2].value})]}),(0,jsx_runtime.jsxs)("div",{className:"columns",children:[(0,jsx_runtime.jsx)("div",{className:customItems[3].classes.join(" "),...customItems[3].attributes,...customItems[3].datasets,children:customItems[3].value}),(0,jsx_runtime.jsx)("div",{className:customItems[4].classes.join(" "),...customItems[4].attributes,...customItems[4].datasets,children:customItems[4].value})]})]})]})})};ListHeaderCustomWith5Items.__docgenInfo={description:"",methods:[],displayName:"ListHeaderCustomWith5Items",props:{items:{required:!0,tsType:{name:"Array",elements:[{name:"intersection",raw:"{\n    value: any;\n    attributes?: HTMLAttributes<HTMLDivElement>;\n    datasets?: CommonDataSet;\n} & CommonStyleClasses",elements:[{name:"signature",type:"object",raw:"{\n    value: any;\n    attributes?: HTMLAttributes<HTMLDivElement>;\n    datasets?: CommonDataSet;\n}",signature:{properties:[{key:"value",value:{name:"any",required:!0}},{key:"attributes",value:{name:"HTMLAttributes",elements:[{name:"HTMLDivElement"}],raw:"HTMLAttributes<HTMLDivElement>",required:!1}},{key:"datasets",value:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>",required:!1}}]}},{name:"signature",type:"object",raw:"{\n    classes?: string[];\n}",signature:{properties:[{key:"classes",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!1}}]}}]}],raw:"ListColumnFields[]"},description:""},classes:{required:!1,tsType:{name:"signature",type:"object",raw:"{\n    wrap?: string[];\n    column?: string[];\n}",signature:{properties:[{key:"wrap",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!1}},{key:"column",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!1}}]}},description:""},attributes:{required:!1,tsType:{name:"HTMLAttributes",elements:[{name:"HTMLDivElement"}],raw:"HTMLAttributes<HTMLDivElement>"},description:""},datasets:{required:!1,tsType:{name:"Map",elements:[{name:"string"},{name:"any"}],raw:"Map<string, any>"},description:""}}};let list_stories={title:"React Component/Layout/List",component:components.aV,tags:["autodocs"],parameters:{componentSubtitle:"List of items",docs:{description:{component:"This component renders list of items using Flexbox.<br />In Bulma doc: https://bulma.io/documentation/columns/basics/"}}},argTypes:{items:{control:"object",description:"Items in list",table:{type:{summary:"ListItemProps[]",detail:(0,utils.e6)(`
                            {
                                column?: ({
                                    value: any,
                                    attributes?: HTMLAttributes<HTMLDivElement>,
                                    datasets?: Map<string, string>,
                                } as ListColumnFields)[],
                                attributes?: HTMLAttributes<HTMLDivElement>,
                                datasets?: Map<string, string>,
                            }
                        `)}}},headers:{control:"object",description:"Header of list",table:{type:{summary:"ListColumnFields[]",detail:(0,utils.e6)(`
                            ({
                                value: any,
                                attributes?: HTMLAttributes<HTMLDivElement>,
                                datasets?: Map<string, string>,
                            } as ListColumnFields)[]
                        `)},defaultValue:{summary:"[]"}}},itemElement:{control:"object",description:"Element which define custom list detail row",table:{type:{summary:"React.ElementType<ListDetailProps>",detail:(0,utils.e6)(`
                            {
                                items: ListColumnFields[],
                            }
                        `)},defaultValue:{summary:"undefined"}}},headerElement:{control:"object",description:"Element which define custom list header row",table:{type:{summary:"React.ElementType<ListHeaderProps>",detail:(0,utils.e6)(`
                            {
                                items: ListColumnFields[],
                                classes?: {
                                    wrap?: string[],
                                    column?: string[],
                                },
                                attributes?: HTMLAttributes<HTMLDivElement>,
                                datasets?: Map<string, string>,
                            }
                        `)},defaultValue:{summary:"undefined"}}},classes:{control:"object",description:"Style classes",table:{type:{summary:"ListClasses",detail:(0,utils.e6)(`
                            {
                                wrap?: string[],
                                headers?: {
                                    wrap?: string[],
                                    column?: string[],
                                },
                                detail?: {
                                    wrap?: string[],
                                    column?: string[],
                                },
                            }
                        `)},defaultValue:{summary:"{}"}}},attributes:{control:"object",description:"Additional attributes",table:{type:{summary:"ListAttributes",detail:(0,utils.e6)(`
                            {
                                wrap?: HTMLAttributes<HTMLDivElement>,
                                headers?: HTMLAttributes<HTMLDivElement>,
                            }
                        `)},defaultValue:{summary:"{}"}}},datasets:{control:"object",description:"Datasets",table:{type:{summary:"ListDatasets",detail:(0,utils.e6)(`
                            {
                                wrap?: Map<string, string>,
                                headers?: Map<string, string>,
                            }
                        `)},defaultValue:{summary:"new Map()"}}}}},Default={render:args=>(0,jsx_runtime.jsx)(components.aV,{items:[{columns:[{value:"Column A"},{value:"Column B"},{value:"Column C"},{value:"Column D"},{value:"Column E"},{value:"Column F"}]},{columns:[{value:"Column 2A"},{value:"Column 2B"},{value:"Column 2C"},{value:"Column 2D"},{value:"Column 2E"},{value:"Column 2F"}]}],headers:[{value:"Header A"},{value:"Header B"},{value:"Header C"},{value:"Header D"},{value:"Header E"},{value:"Header F"}],...args})},InConsistent={...Default,args:{items:[{columns:[{value:"Column A"},{value:"Column B"},{value:"Column C"},{value:"Column D"},{value:"Column E"},{value:"Column F"},{value:"Column G"}]},{columns:[{value:"Column 2A"},{value:"Column 2B"},{value:"Column 2C"},{value:"Column 2D"},{value:"Column 2E"}]}]}},WithClasses={...Default,args:{headers:[{value:"Header A",classes:["test-header-a"]},{value:"Header B",classes:["test-header-b"]},{value:"Header C",classes:["test-header-c"]},{value:"Header D",classes:["test-header-d"]},{value:"Header E",classes:["test-header-e"]},{value:"Header F",classes:["test-header-f"]}],items:[{columns:[{value:"Column A",classes:["test-data-a"]},{value:"Column B",classes:["test-data-b"]},{value:"Column C",classes:["test-data-c"]},{value:"Column D",classes:["test-data-d"]},{value:"Column E",classes:["test-data-e"]},{value:"Column F",classes:["test-data-f"]}]}],classes:{wrap:["test-wrap"],header:{wrap:["test-header-wrap"],column:["test-header-column"]},detail:{wrap:["test-data-wrap"],column:["test-data-column"]}}}},WithAttributes={...Default,args:{headers:[{value:"Header A",attributes:{"aria-label":"List Header"}},{value:"Header B",attributes:{"aria-label":"List Header"}},{value:"Header C",attributes:{"aria-label":"List Header"}},{value:"Header D",attributes:{"aria-label":"List Header"}},{value:"Header E",attributes:{"aria-label":"List Header"}},{value:"Header F",attributes:{"aria-label":"List Header"}}],items:[{columns:[{value:"Column A",attributes:{"aria-label":"List Column"}},{value:"Column B",attributes:{"aria-label":"List Column"}},{value:"Column C",attributes:{"aria-label":"List Column"}},{value:"Column D",attributes:{"aria-label":"List Column"}},{value:"Column E",attributes:{"aria-label":"List Column"}},{value:"Column F",attributes:{"aria-label":"List Column"}}],attributes:{"aria-label":"List Columns"}}],attributes:{wrap:{"aria-label":"List"},header:{"aria-label":"List Headers"}}}},WithDatasets={...Default,args:{headers:[{value:"Header A",datasets:new Map([["id","header"],["name","header A"]])},{value:"Header B",datasets:new Map([["id","header"],["name","header B"]])},{value:"Header C",datasets:new Map([["id","header"],["name","header C"]])}],items:[{columns:[{value:"Column A",datasets:new Map([["id","column"],["name","column A"]])},{value:"Column B",datasets:new Map([["id","column"],["name","column B"]])},{value:"Column C",datasets:new Map([["id","column"],["name","column C"]])}],datasets:new Map([["id","list-column"],["name","List column"]])}],datasets:{wrap:new Map([["id","wrap"],["name","list-wrap"]]),header:new Map([["id","header"],["name","list-header"]])}}},UsingCustom={...Default,args:{headers:[{value:"Header A",classes:["is-1"]},{value:"Header B",classes:["is-4"]},{value:"Header C",classes:["is-8"]},{value:"Header D",classes:["is-4"]},{value:"Header E",classes:["is-8"]}],items:[{columns:[{value:"Column A",classes:["is-1"]},{value:"Column B",classes:["is-4"]},{value:"Column C",classes:["is-8"]},{value:"Column D",classes:["is-4"]},{value:"Column E",classes:["is-8"]}]},{columns:[{value:"Column 2A",classes:["is-1"]},{value:"Column 2B",classes:["is-4"]},{value:"Column 2C",classes:["is-8"]},{value:"Column 2D",classes:["is-4"]},{value:"Column 2E",classes:["is-8"]}]}],itemElement:ListDetailCustom,headerElement:ListHeaderCustomWith5Items}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: (args: any) => <List items={[{\n    columns: [{\n      value: "Column A"\n    }, {\n      value: "Column B"\n    }, {\n      value: "Column C"\n    }, {\n      value: "Column D"\n    }, {\n      value: "Column E"\n    }, {\n      value: "Column F"\n    }]\n  }, {\n    columns: [{\n      value: "Column 2A"\n    }, {\n      value: "Column 2B"\n    }, {\n      value: "Column 2C"\n    }, {\n      value: "Column 2D"\n    }, {\n      value: "Column 2E"\n    }, {\n      value: "Column 2F"\n    }]\n  }]} headers={[{\n    value: \'Header A\'\n  }, {\n    value: \'Header B\'\n  }, {\n    value: \'Header C\'\n  }, {\n    value: \'Header D\'\n  }, {\n    value: \'Header E\'\n  }, {\n    value: \'Header F\'\n  }]} {...args} />\n}',...Default.parameters?.docs?.source},description:{story:"Default List",...Default.parameters?.docs?.description}}},InConsistent.parameters={...InConsistent.parameters,docs:{...InConsistent.parameters?.docs,source:{originalSource:'{\n  ...Default,\n  args: {\n    items: [{\n      columns: [{\n        value: "Column A"\n      }, {\n        value: "Column B"\n      }, {\n        value: "Column C"\n      }, {\n        value: "Column D"\n      }, {\n        value: "Column E"\n      }, {\n        value: "Column F"\n      }, {\n        value: "Column G"\n      }]\n    }, {\n      columns: [{\n        value: "Column 2A"\n      }, {\n        value: "Column 2B"\n      }, {\n        value: "Column 2C"\n      }, {\n        value: "Column 2D"\n      }, {\n        value: "Column 2E"\n      }]\n    }]\n  }\n}',...InConsistent.parameters?.docs?.source},description:{story:"List with in-consistent rows",...InConsistent.parameters?.docs?.description}}},WithClasses.parameters={...WithClasses.parameters,docs:{...WithClasses.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    headers: [{\n      value: 'Header A',\n      classes: ['test-header-a']\n    }, {\n      value: 'Header B',\n      classes: ['test-header-b']\n    }, {\n      value: 'Header C',\n      classes: ['test-header-c']\n    }, {\n      value: 'Header D',\n      classes: ['test-header-d']\n    }, {\n      value: 'Header E',\n      classes: ['test-header-e']\n    }, {\n      value: 'Header F',\n      classes: ['test-header-f']\n    }],\n    items: [{\n      columns: [{\n        value: \"Column A\",\n        classes: ['test-data-a']\n      }, {\n        value: \"Column B\",\n        classes: ['test-data-b']\n      }, {\n        value: \"Column C\",\n        classes: ['test-data-c']\n      }, {\n        value: \"Column D\",\n        classes: ['test-data-d']\n      }, {\n        value: \"Column E\",\n        classes: ['test-data-e']\n      }, {\n        value: \"Column F\",\n        classes: ['test-data-f']\n      }]\n    }],\n    classes: {\n      wrap: ['test-wrap'],\n      header: {\n        wrap: ['test-header-wrap'],\n        column: ['test-header-column']\n      },\n      detail: {\n        wrap: ['test-data-wrap'],\n        column: ['test-data-column']\n      }\n    }\n  }\n}",...WithClasses.parameters?.docs?.source},description:{story:"List with style classes",...WithClasses.parameters?.docs?.description}}},WithAttributes.parameters={...WithAttributes.parameters,docs:{...WithAttributes.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    headers: [{\n      value: 'Header A',\n      attributes: {\n        'aria-label': 'List Header'\n      }\n    }, {\n      value: 'Header B',\n      attributes: {\n        'aria-label': 'List Header'\n      }\n    }, {\n      value: 'Header C',\n      attributes: {\n        'aria-label': 'List Header'\n      }\n    }, {\n      value: 'Header D',\n      attributes: {\n        'aria-label': 'List Header'\n      }\n    }, {\n      value: 'Header E',\n      attributes: {\n        'aria-label': 'List Header'\n      }\n    }, {\n      value: 'Header F',\n      attributes: {\n        'aria-label': 'List Header'\n      }\n    }],\n    items: [{\n      columns: [{\n        value: \"Column A\",\n        attributes: {\n          'aria-label': 'List Column'\n        }\n      }, {\n        value: \"Column B\",\n        attributes: {\n          'aria-label': 'List Column'\n        }\n      }, {\n        value: \"Column C\",\n        attributes: {\n          'aria-label': 'List Column'\n        }\n      }, {\n        value: \"Column D\",\n        attributes: {\n          'aria-label': 'List Column'\n        }\n      }, {\n        value: \"Column E\",\n        attributes: {\n          'aria-label': 'List Column'\n        }\n      }, {\n        value: \"Column F\",\n        attributes: {\n          'aria-label': 'List Column'\n        }\n      }],\n      attributes: {\n        'aria-label': 'List Columns'\n      }\n    }],\n    attributes: {\n      wrap: {\n        'aria-label': 'List'\n      },\n      header: {\n        'aria-label': 'List Headers'\n      }\n    }\n  }\n}",...WithAttributes.parameters?.docs?.source},description:{story:"List with additional attributes",...WithAttributes.parameters?.docs?.description}}},WithDatasets.parameters={...WithDatasets.parameters,docs:{...WithDatasets.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    headers: [{\n      value: 'Header A',\n      datasets: new Map([['id', 'header'], ['name', 'header A']])\n    }, {\n      value: 'Header B',\n      datasets: new Map([['id', 'header'], ['name', 'header B']])\n    }, {\n      value: 'Header C',\n      datasets: new Map([['id', 'header'], ['name', 'header C']])\n    }],\n    items: [{\n      columns: [{\n        value: \"Column A\",\n        datasets: new Map([['id', 'column'], ['name', 'column A']])\n      }, {\n        value: \"Column B\",\n        datasets: new Map([['id', 'column'], ['name', 'column B']])\n      }, {\n        value: \"Column C\",\n        datasets: new Map([['id', 'column'], ['name', 'column C']])\n      }],\n      datasets: new Map([['id', 'list-column'], ['name', 'List column']])\n    }],\n    datasets: {\n      wrap: new Map([['id', 'wrap'], ['name', 'list-wrap']]),\n      header: new Map([['id', 'header'], ['name', 'list-header']])\n    }\n  }\n}",...WithDatasets.parameters?.docs?.source},description:{story:"List with datasets",...WithDatasets.parameters?.docs?.description}}},UsingCustom.parameters={...UsingCustom.parameters,docs:{...UsingCustom.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    headers: [{\n      value: 'Header A',\n      classes: ['is-1']\n    }, {\n      value: 'Header B',\n      classes: ['is-4']\n    }, {\n      value: 'Header C',\n      classes: ['is-8']\n    }, {\n      value: 'Header D',\n      classes: ['is-4']\n    }, {\n      value: 'Header E',\n      classes: ['is-8']\n    }],\n    items: [{\n      columns: [{\n        value: \"Column A\",\n        classes: ['is-1']\n      }, {\n        value: \"Column B\",\n        classes: ['is-4']\n      }, {\n        value: \"Column C\",\n        classes: ['is-8']\n      }, {\n        value: \"Column D\",\n        classes: ['is-4']\n      }, {\n        value: \"Column E\",\n        classes: ['is-8']\n      }]\n    }, {\n      columns: [{\n        value: \"Column 2A\",\n        classes: ['is-1']\n      }, {\n        value: \"Column 2B\",\n        classes: ['is-4']\n      }, {\n        value: \"Column 2C\",\n        classes: ['is-8']\n      }, {\n        value: \"Column 2D\",\n        classes: ['is-4']\n      }, {\n        value: \"Column 2E\",\n        classes: ['is-8']\n      }]\n    }],\n    itemElement: ListDetailCustom,\n    headerElement: ListHeaderCustomWith5Items\n  }\n}",...UsingCustom.parameters?.docs?.source},description:{story:"List which uses custom List(Header/Detail)Element",...UsingCustom.parameters?.docs?.description}}};let __namedExportsOrder=["Default","InConsistent","WithClasses","WithAttributes","WithDatasets","UsingCustom"]}}]);
//# sourceMappingURL=stories-components-layout-list-list-stories.e3265ce1.iframe.bundle.js.map