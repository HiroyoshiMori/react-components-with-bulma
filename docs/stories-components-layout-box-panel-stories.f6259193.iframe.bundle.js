"use strict";(globalThis.webpackChunk_hiroyoshi_mori_react_components_bulma=globalThis.webpackChunk_hiroyoshi_mori_react_components_bulma||[]).push([[171],{"./src/stories/components/layout/box/panel.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,WithAttributes:()=>WithAttributes,WithClasses:()=>WithClasses,WithDatasets:()=>WithDatasets,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__}),__webpack_require__("./node_modules/react/index.js");var _components__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/index.ts"),_utils__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/utils/index.ts"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/react/jsx-runtime.js");let __WEBPACK_DEFAULT_EXPORT__={title:"React Component/Layout/Panel",component:_components__WEBPACK_IMPORTED_MODULE_1__.s_,tags:["autodocs"],parameters:{componentSubtitle:"Composable Panel",docs:{description:{component:"This component renders a composable panel.<br />In Bulma doc: https://bulma.io/documentation/components/panel/"}}},argTypes:{header:{control:"object",description:"Panel header",table:{type:{summary:"PanelHeaderProps",detail:(0,_utils__WEBPACK_IMPORTED_MODULE_2__.e6)(`
                            {
                                children?: ReactNode,
                                tag?: React.ElementType,
                                classes?: string[],
                                attributes?: HTMLAttributes<HTMLElement>,
                                datasets?: Map<string, string>,
                            }
                        `)}}},items:{control:"object",description:"Panel body items",table:{type:{summary:"(PanelTabsProps | PanelBlockProps)[]",detail:(0,_utils__WEBPACK_IMPORTED_MODULE_2__.e6)(`
                            ({
                                children?: ReactNode,
                                isActive?: boolean,
                                tag?: React.ElementType,
                                href?: string,
                                onClick?: (e: React.MouseEvent) => void,
                                classes: string[],
                                attributes?: HTMLAttributes<HTMLElement>,
                                datasets?: Map<string, string>,
                            } as PanelBlockProps | {
                                items: ({
                                    href?: string,
                                    onClick?: (e: React.MouseEvent) => void,
                                    children?: ReactNode,
                                    classes: string[],
                                    attributes?: HTMLAttributes<HTMLElement>,
                                    datasets?: Map<string, string>,
                                } as PanelTabProps)[],
                                tag?: React.ElementType,
                                classes: string[],
                                attributes?: HTMLAttributes<HTMLDivElement>,
                                datasets?: Map<string, string>,
                            } as PanelTabsProps)[]
                        `)}}},classes:{control:"object",description:"Style classes for panel",table:{type:{summary:"string[]"},defaultValue:{summary:"[]"}}},attributes:{control:"object",description:"Additional attributes for panel",table:{type:{summary:"HTMLAttributes<HTMLDivElement>",detail:(0,_utils__WEBPACK_IMPORTED_MODULE_2__.e6)(`
                            e.g., {'aria-label': 'LABEL'}
                        `)},defaultValue:{summary:"{}"}}},datasets:{control:"object",description:'Datasets for panel. "data-" will be added at the beginning of attributes.',table:{type:{summary:"Map<string, string>",detail:(0,_utils__WEBPACK_IMPORTED_MODULE_2__.e6)(`
                            e.g.,
                            new Map([
                                ['id', 'DATA_ID'],
                                ['name', 'DATA NAME'],
                            ])
                            â†’ data-id="DATA_ID" data-name="DATA NAME"
                        `)},defaultValue:{summary:"new Map()"}}}}},Default={render:args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_3__.jsx)(_components__WEBPACK_IMPORTED_MODULE_1__.s_,{header:{children:"Panel Header"},items:[{items:[{href:"#1",children:"Panel Tab 1"},{href:"#2",children:"Panel Tab 2"},{href:"#3",children:"Panel Tab 3"}]},{children:"Panel Block 1"},{children:"Panel Block 2",tag:"p",isActive:!0},{children:"Panel Block 3",tag:"a",href:"#Block3"},{children:"Panel Block 4",onClick:e=>{console.debug(e)}}],...args})},WithClasses={...Default,args:{header:{children:"Panel Header",classes:["test-panel-header"]},items:[{items:[{href:"#1",children:"Panel Tab 1",classes:["text-panel-tab"]},{href:"#2",children:"Panel Tab 2"},{href:"#3",children:"Panel Tab 3"}],classes:["test-panel-tabs"]},{children:"Panel Block 1",classes:["test-panel-block"]},{children:"Panel Block 2",tag:"p"},{children:"Panel Block 3",tag:"a",href:"#Block3",isActive:!0},{children:"Panel Block 4",onClick:e=>{console.debug(e)}}]}},WithAttributes={...Default,args:{header:{children:"Panel Header",attributes:{"aria-label":"Panel Header"}},items:[{items:[{href:"#1",children:"Panel Tab 1",attributes:{"aria-label":"Panel Tab"}},{href:"#2",children:"Panel Tab 2"},{href:"#3",children:"Panel Tab 3"}],attributes:{"aria-label":"Panel Tabs"}},{children:"Panel Block 1",attributes:{"aria-label":"Panel Block"}},{children:"Panel Block 2",tag:"p"},{children:"Panel Block 3",tag:"a",href:"#Block3",isActive:!0},{children:"Panel Block 4",onClick:e=>{console.debug(e)}}]}},WithDatasets={...Default,args:{header:{children:"Panel Header",datasets:new Map([["id","panel-header"],["name","Panel Header"]])},items:[{items:[{href:"#1",children:"Panel Tab 1",datasets:new Map([["id","panel-tab"],["name","Panel Tab"]])},{href:"#2",children:"Panel Tab 2"},{href:"#3",children:"Panel Tab 3"}],datasets:new Map([["id","panel-tabs"],["name","Panel Tabs"]])},{children:"Panel Block 1",datasets:new Map([["id","panel-block"],["name","Panel block"]])},{children:"Panel Block 2",tag:"p"},{children:"Panel Block 3",tag:"a",href:"#Block3",isActive:!0},{children:"Panel Block 4",onClick:e=>{console.debug(e)}}]}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: (args: any) => <Panel header={{\n    children: 'Panel Header'\n  }} items={[{\n    items: [{\n      href: '#1',\n      children: 'Panel Tab 1'\n    }, {\n      href: '#2',\n      children: 'Panel Tab 2'\n    }, {\n      href: '#3',\n      children: 'Panel Tab 3'\n    }]\n  }, {\n    children: 'Panel Block 1'\n  }, {\n    children: 'Panel Block 2',\n    tag: 'p',\n    isActive: true\n  }, {\n    children: 'Panel Block 3',\n    tag: 'a',\n    href: '#Block3'\n  }, {\n    children: 'Panel Block 4',\n    onClick: (e: React.MouseEvent<HTMLElement>) => {\n      console.debug(e);\n    }\n  }]} {...args} />\n}",...Default.parameters?.docs?.source},description:{story:"Default panel",...Default.parameters?.docs?.description}}},WithClasses.parameters={...WithClasses.parameters,docs:{...WithClasses.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    header: {\n      children: 'Panel Header',\n      classes: ['test-panel-header']\n    },\n    items: [{\n      items: [{\n        href: '#1',\n        children: 'Panel Tab 1',\n        classes: ['text-panel-tab']\n      }, {\n        href: '#2',\n        children: 'Panel Tab 2'\n      }, {\n        href: '#3',\n        children: 'Panel Tab 3'\n      }],\n      classes: ['test-panel-tabs']\n    }, {\n      children: 'Panel Block 1',\n      classes: ['test-panel-block']\n    }, {\n      children: 'Panel Block 2',\n      tag: 'p'\n    }, {\n      children: 'Panel Block 3',\n      tag: 'a',\n      href: '#Block3',\n      isActive: true\n    }, {\n      children: 'Panel Block 4',\n      onClick: (e: React.MouseEvent) => {\n        console.debug(e);\n      }\n    }]\n  }\n}",...WithClasses.parameters?.docs?.source},description:{story:"Panel with style classes",...WithClasses.parameters?.docs?.description}}},WithAttributes.parameters={...WithAttributes.parameters,docs:{...WithAttributes.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    header: {\n      children: 'Panel Header',\n      attributes: {\n        'aria-label': 'Panel Header'\n      }\n    },\n    items: [{\n      items: [{\n        href: '#1',\n        children: 'Panel Tab 1',\n        attributes: {\n          'aria-label': 'Panel Tab'\n        }\n      }, {\n        href: '#2',\n        children: 'Panel Tab 2'\n      }, {\n        href: '#3',\n        children: 'Panel Tab 3'\n      }],\n      attributes: {\n        'aria-label': 'Panel Tabs'\n      }\n    }, {\n      children: 'Panel Block 1',\n      attributes: {\n        'aria-label': 'Panel Block'\n      }\n    }, {\n      children: 'Panel Block 2',\n      tag: 'p'\n    }, {\n      children: 'Panel Block 3',\n      tag: 'a',\n      href: '#Block3',\n      isActive: true\n    }, {\n      children: 'Panel Block 4',\n      onClick: (e: React.MouseEvent) => {\n        console.debug(e);\n      }\n    }]\n  }\n}",...WithAttributes.parameters?.docs?.source},description:{story:"Panel with additional attributes",...WithAttributes.parameters?.docs?.description}}},WithDatasets.parameters={...WithDatasets.parameters,docs:{...WithDatasets.parameters?.docs,source:{originalSource:"{\n  ...Default,\n  args: {\n    header: {\n      children: 'Panel Header',\n      datasets: new Map([['id', 'panel-header'], ['name', 'Panel Header']])\n    },\n    items: [{\n      items: [{\n        href: '#1',\n        children: 'Panel Tab 1',\n        datasets: new Map([['id', 'panel-tab'], ['name', 'Panel Tab']])\n      }, {\n        href: '#2',\n        children: 'Panel Tab 2'\n      }, {\n        href: '#3',\n        children: 'Panel Tab 3'\n      }],\n      datasets: new Map([['id', 'panel-tabs'], ['name', 'Panel Tabs']])\n    }, {\n      children: 'Panel Block 1',\n      datasets: new Map([['id', 'panel-block'], ['name', 'Panel block']])\n    }, {\n      children: 'Panel Block 2',\n      tag: 'p'\n    }, {\n      children: 'Panel Block 3',\n      tag: 'a',\n      href: '#Block3',\n      isActive: true\n    }, {\n      children: 'Panel Block 4',\n      onClick: (e: React.MouseEvent) => {\n        console.debug(e);\n      }\n    }]\n  }\n}",...WithDatasets.parameters?.docs?.source},description:{story:"Panel with datasets",...WithDatasets.parameters?.docs?.description}}};let __namedExportsOrder=["Default","WithClasses","WithAttributes","WithDatasets"]}}]);
//# sourceMappingURL=stories-components-layout-box-panel-stories.f6259193.iframe.bundle.js.map